reserved_room_type + adr + days_in_waiting_list + customer_type +
total_of_special_requests,
data = train , family = "binomial")
set.seed(369)
glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
market_segment + is_repeated_guest + adults + babies +
previous_cancellations +
deposit_type + booking_changes  +
reserved_room_type + adr + days_in_waiting_list + customer_type +
total_of_special_requests,
data = train_data , family = "binomial")
summary(glm.fit)
train_pred <-predict(glm.fit, train_data,type = 'response')
train_pred <-predict(glm.fit, train_data,type = 'response') %>% as.data.frame()
View(train_pred)
pred <- prediction(train_pred,train_data$is_canceled)
View(train_data)
pred <- prediction(train_pred,train_data$is_canceled)
train_pred <-predict(glm.fit, train_data,type = 'response')
pred <- prediction(train_pred,train_data$is_canceled)
train_pred <-predict(glm.fit, train_data,type = c("response"))
pred <- prediction(train_pred,train_data$is_canceled)
airbnb$prob <- train_pred
train_pred <- predict(glm.fit, train_data,type = c("response")) %>% as.data.frame()
set.seed(369)
glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
market_segment + is_repeated_guest + adults + babies +
previous_cancellations +
deposit_type + booking_changes  +
reserved_room_type + adr + days_in_waiting_list + customer_type +
total_of_special_requests,
data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
View(airbnb)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~., airbnb, family = "binomial")
summary(modelo_log_multi)
View(airbnb)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + reserved_room + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + reserved_room_type + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc <- roc(is_canceled ~ prob_multi, data = airbnb)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
market_segment + is_repeated_guest + adults + babies +
previous_cancellations +
deposit_type + booking_changes  +
reserved_room_type + adr + days_in_waiting_list + customer_type +
total_of_special_requests,
data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ previous_cancellations , data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
set.seed(369)
glm.fit <- glm(is_canceled ~ booking_changes, data = airbnb , family = "binomial")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ hotel, data = airbnb , family = "binomial")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ costumer_type, data = airbnb , family = "binomial")
set.seed(369)
glm.fit <- glm(is_canceled ~ customer_type, data = airbnb , family = "binomial")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ reserved_room_type, data = airbnb , family = "binomial")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ days_in_waiting_list, data = airbnb , family = "binomial")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
set.seed(369)
glm.fit <- glm(is_canceled ~ lead_time, data = airbnb , family = "binomial")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = airbnb , family = "binomial")
summary(glm.fit)
prob <- predict(glm.fit, type = c("response"))
airbnb$prob <- prob
curva_roc <- roc(is_canceled ~ prob, data = airbnb)
plot(curva_roc)
auc(curva_roc)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + adults + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + babies + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + children + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + market_segment + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + reserved_room_type + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + days_in_waiting_list + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + market_segment + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
set.seed(369)
data_split <- initial_split(airbnb,
prop = 0.7,
strata = NULL)
train_data <- training(data_split) %>% as.data.frame()
test_data <- testing(data_split) %>%  as.data.frame()
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + market_segment + customer_type + total_of_special_requests, train_data, family = "binomial")
summary(modelo_log_multi)
test_data$prob_multi <- predict(modelo_log_multi, test_data, type = c("response"))
auc(roc(is_canceled ~ prob_multi, data = test_data))
airbnb$prob <- NULL
modelo_log_multi <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + market_segment + customer_type + total_of_special_requests, airbnb, family = "binomial")
summary(modelo_log_multi)
prob_multi <- predict(modelo_log_multi, type = c("response"))
airbnb$prob_multi <- prob_multi
curva_roc_multi <- roc(is_canceled ~ prob_multi, data = airbnb)
plot(curva_roc_multi)
auc(curva_roc_multi)
set.seed(369)
data_split <- initial_split(airbnb,
prop = 0.7,
strata = NULL)
train_data <- training(data_split) %>% as.data.frame()
test_data <- testing(data_split) %>%  as.data.frame()
modelo_log_multi1 <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + market_segment + customer_type + total_of_special_requests, train_data, family = "binomial")
summary(modelo_log_multi1)
test_data$prob_multi <- predict(modelo_log_multi1, test_data, type = c("response"))
auc(roc(is_canceled ~ prob_multi, data = test_data))
set.seed(369)
data_split <- initial_split(airbnb,
prop = 0.7,
strata = NULL)
train_data <- training(data_split) %>% as.data.frame()
test_data <- testing(data_split) %>%  as.data.frame()
modelo_log_multi1 <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, train_data, family = "binomial")
summary(modelo_log_multi1)
test_data$prob_multi <- predict(modelo_log_multi1, test_data, type = c("response"))
auc(roc(is_canceled ~ prob_multi, data = test_data))
View(test_data)
reg_simp <- lm(price ~ mileage, data = audi_sca)
summary(reg_simp)
VIF(lm.fit)
VIF(reg_simp)
reg_simp <- lm(price ~ mileage, data = audi)
summary(reg_simp)
reg_simp <- lm(price ~ mileage, data = audi_sca)
summary(reg_simp)
reg_mult <- lm(price ~ model + year*mileage + engineSize, data = audi_sca)
summary(reg_mult)
VIF(reg_mult)
install.packages("olsrr")
library(olsrr)
#fuerza_bruta <- ols_ste
library(olsrr)
fuerza_bruta <- ols_step_all_possible(reg_mult)
plot(fuerza_bruta)
sel_adelante <- ols_step_forward_p(reg_mult)
sel_adelante <- ols_step_forward_p(reg_mult)
sel_atras <- ols_step_backward_p(reg_mult)
sel_atras
View(audi)
reg_mult <- lm(price ~ model + year*mileage + engineSize + mpg, data = audi_sca)
summary(reg_mult)
VIF(reg_mult)
library(olsrr)
fuerza_bruta <- ols_step_all_possible(reg_mult)
plot(fuerza_bruta)
sel_adelante <- ols_step_forward_p(reg_mult)
sel_atras <- ols_step_backward_p(reg_mult)
sel_atras
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(GGally)
library(regclass)
library(GGally)
library(regclass)
library(pROC)
library(pROC)
library(rsample)
setwd("D:/U/mineria de datos/Ayudantia_DataMining01_2021/Ayudantia 9")
toyota <- read.csv("toyota.csv")
vinos <- read.csv("winequality-red.csv")
summary(toyota)
toyota %>% head()
summary(toyota)
toyota %>% head()
View(toyota)
toyota$model <- as.factor(toyota$model)
toyota$transmission <- as.factor(toyota$transmission)
toyota$fuelType <- as.factor(toyota$fuelType)
summary(toyota)
toyota %>% filter(engineSize == 0) %>% nrow()
toyota <- toyota %>%  filter(engineSize != 0)
summary(toyota)
sum(is.na(toyota))
sum(is.null(toyota))
toyota %>% select(year, mileage, tax, mpg, engineSize, price) %>%
ggpairs(lower = list(continuous = wrap("points", alpha = 0.3, size = 0.5)))
toyota %>%
ggplot(aes(transmission, price)) +
geom_boxplot()
toyota %>%
ggplot(aes(fuelType, price)) +
geom_boxplot()
toyota %>% mutate(model = reorder(model, price)) %>%
ggplot(aes(price, model)) +
geom_boxplot()
View(toyota)
toyota %>%
ggplot(mileage, price)) +
geom_boxplot()
toyota %>%
ggplot(aes(mileage, price)) +
geom_boxplot()
toyota %>%
ggplot(aes(mileage, price)) +
geom_boxplot()
toyota %>% mutate(model = reorder(model, price)) %>%
ggplot(aes(price, model)) +
geom_boxplot()
toyota %>%
ggplot(aes(transmission, price)) +
geom_boxplot()
toyota %>%
ggplot(aes(fuelType, price)) +
geom_boxplot()
toyota %>%
ggplot(aes(mileage, price)) +
geom_boxplot()
toyota %>% mutate(model = reorder(model, price)) %>%
ggplot(aes(price, model)) +
geom_boxplot()
toyota %>% ggplot(aes(mileage, price)) +
geom_point(alpha = .1) +
stat_smooth(method = "gam", formula = y ~ s(x, k=3))
toyota %>% ggplot(aes(year, price)) +
geom_point(alpha = .1) +
stat_smooth(method = "gam", formula = y ~ s(x, k=3))
toyota %>% ggplot(aes(mpg, price)) +
geom_point(alpha = .1) +
stat_smooth(method = "gam", formula = y ~ s(x, k=3))
toyota %>% ggplot(aes(engineSize, price)) +
geom_point(alpha = .1) +
stat_smooth(method = "gam", formula = y ~ s(x, k=3))
toyota %>% filter(., year >= 2005) %>% ggplot(aes(year, price)) +
geom_point(alpha = .1) +
stat_smooth(method = "gam", formula = y ~ s(x, k=3))
toyota_sca <- toyota
toyota_sca[,c(2,3,5,7,8,9)] <- scale(toyota_sca[,c(2,3,5,7,8,9)])
toyota_sca %>%  head()
reg_simp <- lm(price ~ mileage, data = toyota)
summary(reg_simp)
reg_mult <- lm(price ~ model + year*mileage + engineSize + mpg, data = toyota_sca)
summary(reg_mult)
summary(reg_mult)
reg_mult <- lm(price ~ model + year*mileage + engineSize + mpg, data = toyota_sca)
summary(reg_mult)
VIF(reg_mult)
library(olsrr)
fuerza_bruta <- ols_step_all_possible(reg_mult)
plot(fuerza_bruta)
summary(vinos)
summary(vinos)
vinos %>% head()
glimpse(vinos)
ggplot(vinos,aes(x=factor(hotel))) +
geom_bar(col ="black",fill="#993333",alpha=0.5) +
theme(axis.text.x = element_text(face="bold", size=10)) +
scale_x_discrete("Hotel") +
scale_y_continuous("Count")
View(vinos)
ggplot(vinos,aes(x=factor(pH))) +
geom_bar(col ="black",fill="#993333",alpha=0.5) +
theme(axis.text.x = element_text(face="bold", size=10)) +
scale_x_discrete("PH") +
scale_y_continuous("Count")
ggplot(vinos,aes(factor(pH,levels=quality))) +
geom_bar(col ="black",fill="#993333",alpha=0.5) +
theme(axis.text.x = element_text(face="bold", size=8, angle=30)) +
scale_y_continuous("Count",limits = c(0,1500),breaks=seq(0,15000,by=1500)) +
scale_x_discrete("Month")
ggplot(vinos,aes(factor(quality))) +
geom_bar(col ="black",fill="#993333",alpha=0.5) +
theme(axis.text.x = element_text(face="bold", size=8, angle=30)) +
scale_y_continuous("Count",limits = c(0,1500),breaks=seq(0,15000,by=1500)) +
scale_x_discrete("quality")
ggplot(data = vinos,aes(factor(pH)))+
geom_bar( col='black', fill="#993333", alpha = 0.5) +
scale_x_discrete("ph") +
scale_y_continuous("Count",limits = c(0,5000),breaks=seq(0,47222,by=5000))  +
theme(axis.text.x = element_text(face="bold", size=10))
acidityRate <- vinos %>%
group_by(fixed.acidity) %>%
summarise(fixed.acidity)
acidityRate <- vinos %>%
summarise(fixed.acidity)
acidityRate <- as.data.frame(acidityRate)
acidityRate
ggplot(data = vinos, aes(x = factor(ph), y = quality  )) +
geom_boxplot(col='black', fill="#993333", alpha = 0.5) +
theme(axis.text.x = element_text(face="bold", size=10)) +
scale_y_continuous("quality",limits = c(1,7),breaks=seq(1,8,by=1)) +
scale_x_discrete("ph")
ggplot(data = vinos, aes(x = factor(ph), y = quality  )) +
geom_boxplot(col='black', fill="#993333", alpha = 0.5) +
theme(axis.text.x = element_text(face="bold", size=10)) +
scale_y_continuous("quality",limits = c(1,7),breaks=seq(1,8,by=1)) +
scale_x_discrete("pH")
ggplot(data = vinos, aes(x = factor(pH), y = quality  )) +
geom_boxplot(col='black', fill="#993333", alpha = 0.5) +
theme(axis.text.x = element_text(face="bold", size=10)) +
scale_y_continuous("quality",limits = c(1,7),breaks=seq(1,8,by=1)) +
scale_x_discrete("pH")
d <- vinos %>%
count() %>%
arrange(match(pH,quality))
glm.fit <- glm(pH ~ quality, data = vinos , family = "binomial")
glm.fit <- glm(vinos ~ quality+pH, data = vinos , family = "binomial")
ggplot(data = vinos, aes(x = factor(pH), y = quality  )) +
geom_boxplot(col='black', fill="#993333", alpha = 0.5) +
theme(axis.text.x = element_text(face="bold", size=10)) +
scale_y_continuous("quality",limits = c(1,7),breaks=seq(1,8,by=1)) +
scale_x_discrete("pH")
set.seed(369)
glm.fit <- glm(alcohol ~ pH, data = vinos , family = "binomial")
glm.fit <- glm(alcohol ~ pH+quality, data = vinos , family = "binomial")
glm.fit <- glm(alcohol ~ citrid.acid, data = vinos , family = "binomial")
glm.fit <- glm(alcohol ~ citric.acid, data = vinos , family = "binomial")
glm.fit <- glm(alcohol, data = vinos , family = "binomial")
glm.fit <- glm(~alcohol, data = vinos , family = "binomial")
glm.fit <- glm(citric.acid~alcohol, data = vinos , family = "binomial")
glm.fit <- glm(citric.acid ~ pH, data = vinos , family = "binomial")
glm.fit <- glm(pH ~ pH, data = vinos , family = "binomial")
glm.fit <- glm(pH, data = vinos , family = "binomial")
glm.fit <- glm(formula= mX+n, data = vinos , family = "binomial")
glm.fit <- glm(pH~ alcohol, data = vinos , family = "binomial")
glm.fit <- glm(pH~ alcohol, data = vinos , family = "nominal")
glm.fit <- glm(pH~ alcohol, data = vinos , family = "binomial")
glm.fit <- glm(citric.acid~ alcohol, data = vinos , family = "binomial")
glm.fit <- glm(citric.acid~ alcohol, data = vinos , family = "exponencial")
glm.fit <- glm(citric.acid~ alcohol, data = vinos , family = "exponential")
#glm.fit <- glm(is_canceled ~ hotel + lead_time + arrival_date_month + children +
#                        market_segment + is_repeated_guest + adults + babies +
#                        previous_cancellations +
#                        deposit_type + booking_changes  +
#                        reserved_room_type + adr + days_in_waiting_list + customer_type +
#                        total_of_special_requests,
#                        data = vinos , family = "binomial")
#summary(glm.fit)
reg_vin <- lm(pH ~ quality, data = vinos)
prob <- predict(reg_vin, type = c("response"))
vinos$prob <- prob
curva_roc <- roc(pH ~ prob, data = vinos)
set.seed(369)
data_split <- initial_split(vinos,
prop = 0.7,
strata = NULL)
train_data <- training(data_split) %>% as.data.frame()
test_data <- testing(data_split) %>%  as.data.frame()
modelo_log_multi1 <- glm(is_canceled ~ hotel + lead_time + is_repeated_guest + previous_cancellations + deposit_type + booking_changes + adr + customer_type + total_of_special_requests, train_data, family = "binomial")
summary(modelo_log_multi1)
test_data$prob_multi <- predict(modelo_log_multi1, test_data, type = c("response"))
test_data$prob_multi <- predict(prob, test_data, type = c("response"))
knitr::opts_chunk$set(echo = TRUE)
train_data <- training(data_split) %>% as.data.frame()
test_data <- testing(data_split) %>%  as.data.frame()
