sample_spotifyonep <- beatsnum %>% slice_sample(n=onep)
write.table(sample_spotifyfivep, "Spotify.csv", sep = ",")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv", sep = ",")
set.seed(963)
# Este es un ejemplo de como hacer un sample con la funcion slice_sample de dplyr, que hace muy sencillo el tomar una sub conjunto del data set, donde solo tenemos que indicar la cantidad n de datos que queremos en nuestro sample
# summary(beats)
beats <- beats %>%
filter(!(is.na(album_release_year)))
beatsnum <- beats[, colnames(beats) %in% c("artist_name","track_name","album_name","danceability", "energy","key","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","duration_ms")]
beatsnum = beatsnum[,c(1,14,15,2,3,4,5,6,7,8,9,10,11,12,13)]
twentyp <- round(447622*0.2)
tenp <- round(447622*0.1)
fivep <- round(447622*0.05)
onep <- round(447622*0.01)
sample_spotifytwetyp <- beatsnum %>% slice_sample(n=twentyp)
sample_spotifytenp <- beatsnum %>% slice_sample(n=tenp)
sample_spotifyfivep <- beatsnum %>% slice_sample(n=fivep)
sample_spotifyonep <- beatsnum %>% slice_sample(n=onep)
write.table(sample_spotifyfivep, "Spotify.csv", sep = ",",fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv", sep = ",")
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv", sep = ",")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- file.choose()
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv", sep = ",")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL)
names <- make.unique(spotify$X)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, stringsAsFactors = FALSE)
names <- make.unique(spotify$X)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, stringsAsFactors = FALSE)
View(spotify)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
spotify$row.names <- NULL
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
spotify$row.names <- NULL
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read_csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read_csv("Spotify.csv",sep = ",")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read_csv("Spotify.csv")
spotify$row.names <- NULL
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, fileEncoding = "UTF-8")
spotify$row.names <- NULL
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",",header = TRUE, row.names = NULL, fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = "," row.names = NULL, fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", row.names = NULL, fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8")
load("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Proyectos/Proyecto2/Proyecto2.Rmd")
load("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/analisis_de_datos/Proyectos/Proyecto 2/proyecto2final/spotify.RData")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
# Para cargar los datos en primera instancia debemos subirlos
set.seed(963)
# Este es un ejemplo de como hacer un sample con la funcion slice_sample de dplyr, que hace muy sencillo el tomar una sub conjunto del data set, donde solo tenemos que indicar la cantidad n de datos que queremos en nuestro sample
# summary(beats)
beats <- beats %>%
filter(!(is.na(album_release_year)))
beatsnum <- beats[, colnames(beats) %in% c("artist_name","track_name","album_name","danceability", "energy","key","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","duration_ms")]
beatsnum = beatsnum[,c(1,14,15,2,3,4,5,6,7,8,9,10,11,12,13)]
twentyp <- round(447622*0.2)
tenp <- round(447622*0.1)
fivep <- round(447622*0.05)
onep <- round(447622*0.01)
sample_spotifytwetyp <- beatsnum %>% slice_sample(n=twentyp)
sample_spotifytenp <- beatsnum %>% slice_sample(n=tenp)
sample_spotifyfivep <- beatsnum %>% slice_sample(n=fivep)
sample_spotifyonep <- beatsnum %>% slice_sample(n=onep)
write.table(sample_spotifyfivep, "Spotify.csv", sep = ",",fileEncoding = "UTF-8", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8")
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8", quote = "")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8", quote = "", header = TRUE)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "UTF-8", quote = "", fill = FALSE)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8", quote = "", row.names = NULL, stringsAsFactors = FALS)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8", quote = "", row.names = NULL, stringsAsFactors = FALSE)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8", quote = "", row.names = NULL)
load("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/analisis_de_datos/Proyectos/Proyecto 2/proyecto2final/spotify.RData")
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
# Para cargar los datos en primera instancia debemos subirlos
set.seed(963)
# Este es un ejemplo de como hacer un sample con la funcion slice_sample de dplyr, que hace muy sencillo el tomar una sub conjunto del data set, donde solo tenemos que indicar la cantidad n de datos que queremos en nuestro sample
# summary(beats)
beats <- beats %>%
filter(!(is.na(album_release_year)))
beatsnum <- beats[, colnames(beats) %in% c("artist_name","track_name","album_name","danceability", "energy","key","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","duration_ms")]
beatsnum = beatsnum[,c(1,14,15,2,3,4,5,6,7,8,9,10,11,12,13)]
twentyp <- round(447622*0.2)
tenp <- round(447622*0.1)
fivep <- round(447622*0.05)
onep <- round(447622*0.01)
sample_spotifytwetyp <- beatsnum %>% slice_sample(n=twentyp)
sample_spotifytenp <- beatsnum %>% slice_sample(n=tenp)
sample_spotifyfivep <- beatsnum %>% slice_sample(n=fivep)
sample_spotifyonep <- beatsnum %>% slice_sample(n=onep)
write.csv(sample_spotifyfivep, "Spotify.csv", sep = ",", row.names = FALSE, fileEncoding = "utf-8",)
set.seed(963)
# Este es un ejemplo de como hacer un sample con la funcion slice_sample de dplyr, que hace muy sencillo el tomar una sub conjunto del data set, donde solo tenemos que indicar la cantidad n de datos que queremos en nuestro sample
# summary(beats)
beats <- beats %>%
filter(!(is.na(album_release_year)))
beatsnum <- beats[, colnames(beats) %in% c("artist_name","track_name","album_name","danceability", "energy","key","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","duration_ms")]
beatsnum = beatsnum[,c(1,14,15,2,3,4,5,6,7,8,9,10,11,12,13)]
twentyp <- round(447622*0.2)
tenp <- round(447622*0.1)
fivep <- round(447622*0.05)
onep <- round(447622*0.01)
sample_spotifytwetyp <- beatsnum %>% slice_sample(n=twentyp)
sample_spotifytenp <- beatsnum %>% slice_sample(n=tenp)
sample_spotifyfivep <- beatsnum %>% slice_sample(n=fivep)
sample_spotifyonep <- beatsnum %>% slice_sample(n=onep)
write.csv(sample_spotifyfivep, "Spotify.csv", sep = ",", row.names = FALSE, fileEncoding = "utf-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8")
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8")
View(spotify)
spotify %>%
summarise_all(funs(sum(is.na(.))))
spotify %>%
summarise_all(funs(sum(is.na(.))))
str(spotify)
spotify %>%
summarise_all(funs(sum(is.na(.))))
str(spotify)
spotify$artist_name <- as.character(spotify$artist_name)
spotify$track_name <- as.character(spotify$track_name)
spotify$album_name <- as.character(spotify$album_name)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
spotify %>%
summarise_all(funs(sum(is.na(.))))
str(spotify)
spotify$artist_name <- as.character(spotify$artist_name)
spotify$track_name <- as.character(spotify$track_name)
spotify$album_name <- as.character(spotify$album_name)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
str(spotify)
spotify %>%
summarise_all(funs(sum(is.na(.))))
spotify$artist_name <- as.character(spotify$artist_name)
spotify$track_name <- as.character(spotify$track_name)
spotify$album_name <- as.character(spotify$album_name)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
str(spotify)
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
spotify %>%
summarise_all(funs(sum(is.na(.))))
spotify$artist_name <- as.character(spotify$artist_name)
spotify$track_name <- as.character(spotify$track_name)
spotify$album_name <- as.character(spotify$album_name)
str(spotify)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
data_sca <- scale(data_num, scale)
spotify %>%
summarise_all(funs(sum(is.na(.))))
spotify$artist_name <- as.character(spotify$artist_name)
spotify$track_name <- as.character(spotify$track_name)
spotify$album_name <- as.character(spotify$album_name)
spotify$danceability <- as.double(as.character(spotify$danceability))
spotify$energy <- as.double(as.character(spotify$energy))
spotify$key <- as.double(as.character(spotify$key))
spotify$loudness <- as.double(as.character(spotify$loudness))
spotify$mode <- as.double(as.character(spotify$mode))
spotify$speechiness <- as.double(as.character(spotify$speechiness))
spotify$acousticness <- as.double(as.character(spotify$acousticness))
spotify$instrumentalness <- as.double(as.character(spotify$instrumentalness))
spotify$liveness <- as.double(as.character(spotify$liveness))
spotify$valence <- as.double(as.character(spotify$valence))
spotify$tempo <- as.double(as.character(spotify$tempo))
spotify$duration_ms <- as.double(as.character(spotify$duration_ms))
str(spotify)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
data_sca <- scale(data_num, scale)
View(data_num)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
data_sca <- sapply(data_num, scale)
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 15)
model
# Plot
ggplot(data_sca, aes(danceability, duration_ms , color = factor(model$cluster))) +
geom_point(alpha = 0.3)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
data_sca <- sapply(data_num, scale) %>% as_tibble()
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 15)
model
# Plot
ggplot(data_sca, aes(danceability, duration_ms , color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 40)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.5, minPts = 20)
model
library(dbscan)
model = dbscan(data_sca, eps = 1, minPts = 20)
model
# Plot
ggplot(data_sca, aes(danceability, duration_ms , color = factor(model$cluster))) +
geom_point(alpha = 0.3)
# Plot
ggplot(data_sca, aes(danceability, valence, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(e1071)
modelo_c_means <- cmeans(data_sca, 16, m=3)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, valence, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# FCP
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
library(mclust)
model_gmm = Mclust(data_escalada)
library(mclust)
model_gmm = Mclust(data_sca)
model_gmm
summary(model_gmm, parameters = TRUE)
# Plot
ggplot(data_sca) +
aes(x=danceability, y=valence, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
# Plot
ggplot(data_sca) +
aes(x=danceability, y=energy, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# Plot
ggplot(data_sca, aes(danceability, energy, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 8)
model
# Plot
ggplot(data_sca, aes(danceability, energy, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.2, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.25, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.01, minPts = 10)
model
# Plot
ggplot(data_sca, aes(danceability, energy, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(dbscan)
model = dbscan(data_sca, eps = 0.01, minPts = 20)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 20)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 15)
model
# Plot
ggplot(data_sca, aes(danceability, energy, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(e1071)
modelo_c_means <- cmeans(data_sca, 36, m=3)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
library(e1071)
modelo_c_means <- cmeans(data_sca, 10, m=3)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# FCP
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
load("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/analisis_de_datos/Proyectos/Proyecto 2/proyecto2final/spotify.RData")
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
# Para cargar los datos en primera instancia debemos subirlos
set.seed(963)
# Este es un ejemplo de como hacer un sample con la funcion slice_sample de dplyr, que hace muy sencillo el tomar una sub conjunto del data set, donde solo tenemos que indicar la cantidad n de datos que queremos en nuestro sample
# summary(beats)
beats <- beats %>%
filter(!(is.na(album_release_year)))
beatsnum <- beats[, colnames(beats) %in% c("artist_name","track_name","album_name","danceability", "energy","key","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","duration_ms")]
beatsnum = beatsnum[,c(1,14,15,2,3,4,5,6,7,8,9,10,11,12,13)]
twentyp <- round(447622*0.2)
tenp <- round(447622*0.1)
fivep <- round(447622*0.05)
onep <- round(447622*0.01)
sample_spotifytwetyp <- beatsnum %>% slice_sample(n=twentyp)
sample_spotifytenp <- beatsnum %>% slice_sample(n=tenp)
sample_spotifyfivep <- beatsnum %>% slice_sample(n=fivep)
sample_spotifyonep <- beatsnum %>% slice_sample(n=onep)
sample_spotify <- beatsnum %>% slice_sample(n=13000)
write.csv(sample_spotify, "Spotify.csv", sep = ",", row.names = FALSE, fileEncoding = "utf-8")
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
setwd("D:/Users/Italo/Documents/Italo Felipe/UAI/Semestre 11/Ayudantia Mineria de Datos/material ayudantia/Ayudantia8")
spotify <- read.csv("Spotify.csv",sep = ",", fileEncoding = "utf-8")
spotify %>%
summarise_all(funs(sum(is.na(.))))
spotify$artist_name <- as.character(spotify$artist_name)
spotify$track_name <- as.character(spotify$track_name)
spotify$album_name <- as.character(spotify$album_name)
spotify$danceability <- as.double(as.character(spotify$danceability))
spotify$energy <- as.double(as.character(spotify$energy))
spotify$key <- as.double(as.character(spotify$key))
spotify$loudness <- as.double(as.character(spotify$loudness))
spotify$mode <- as.double(as.character(spotify$mode))
spotify$speechiness <- as.double(as.character(spotify$speechiness))
spotify$acousticness <- as.double(as.character(spotify$acousticness))
spotify$instrumentalness <- as.double(as.character(spotify$instrumentalness))
spotify$liveness <- as.double(as.character(spotify$liveness))
spotify$valence <- as.double(as.character(spotify$valence))
spotify$tempo <- as.double(as.character(spotify$tempo))
spotify$duration_ms <- as.double(as.character(spotify$duration_ms))
str(spotify)
datachar <- c("artist_name", "track_name", "album_name")
datanum <- c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms")
data_num <- spotify %>%
select(datanum)
data_char <- spotify %>%
select(datachar)
data_sca <- sapply(data_num, scale) %>% as_tibble()
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 15)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.1, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.3, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.3, minPts = 15)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.3, minPts = 5)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.3, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 0.5, minPts = 10)
model
library(dbscan)
model = dbscan(data_sca, eps = 1, minPts = 10)
model
# Plot
ggplot(data_sca, aes(danceability, energy, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(dbscan)
model = dbscan(data_sca, eps = 0.5, minPts = 10)
model
# Plot
ggplot(data_sca, aes(danceability, energy, color = factor(model$cluster))) +
geom_point(alpha = 0.3)
library(e1071)
modelo_c_means <- cmeans(data_sca, 10, m=3)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# FCP
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
library(e1071)
modelo_c_means <- cmeans(data_sca, 10, m=2)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# FCP
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
library(mclust)
model_gmm = Mclust(data_sca)
model_gmm
summary(model_gmm, parameters = TRUE)
# Plot
ggplot(data_sca) +
aes(x=danceability, y=energy, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
# BIC
plot(model_gmm, what = "BIC")
fviz_cluster(model, data_sca, stand = FALSE, frame = FALSE,geom = "point")
fviz_cluster(modelo_c_means, data_sca, stand = FALSE, frame = FALSE,geom = "point")
fviz_cluster(model_gmm, data_sca, stand = FALSE, frame = FALSE,geom = "point")
install.packages("fclust")
library(tidyverse)
library(cluster)
library(factoextra)
library(fclust)
library(e1071)
modelo_c_means <- cmeans(data_sca, 10, m=2)
modelo_cmeans <- Fclust(data_sca, 10)
library(e1071)
modelo_c_means <- cmeans(data_sca, 10, m=2)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
#Plot
ggplot(data_sca, aes( color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# FCP
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
library(e1071)
modelo_c_means <- cmeans(data_sca, 6, m=2)
modelo_c_means$membership %>% head()
#Plot
ggplot(data_sca, aes(danceability, energy, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
# FCP
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
